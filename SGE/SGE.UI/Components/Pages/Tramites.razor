@page "/tramites/{IdUsuario}"
@rendermode InteractiveServer
@inject NavigationManager Navigation

<PageTitle>Trámites | SGE</PageTitle>
<Excepcion @ref="ventanaExcepcion"/>

<section class="seccion-paginas">
    <h1>Trámites</h1>
    <div class="contenedor">
        <div class="formularios">
            @if (operacion == "Alta"){
                <form class="form" @onsubmit="DarAltaTramite">
                    <div class="elemento-input">
                        <h4>Id de expediente a dar de alta </h4>
                        <input type="text" @bind="_expedienteId" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Contenido a dar de alta </h4>
                        <input type="text" @bind="_contenido" required>
                    </div>
                    <div>
                        <label for="etiqueta">Etiqueta a dar de alta:</label>
                        <select class="etiqueta" @bind="_etiqueta" required>
                            <option value="EscritoPresentado">Escrito presentado</option>
                            <option value="Despacho">Despacho</option>
                            <option value="Notificacion">Notificacion</option>
                            <option value="Resolucion">Resolución</option>
                            <option value="PaseAEstudio">Pase a Estudio</option>
                            <option value="PaseAlArchivo">Pase al Archivo</option>
                        </select>
                    </div>
                    <div>
                        <button type="submit" class="boton-inicio">Dar de alta</button>
                    </div>
                </form>
            }
            @if (operacion == "Baja"){
                <form class="form-expedientes" @onsubmit="DarBajaTramite">
                    <div class="elemento-input">
                        <h4>ID Trámite a dar de baja</h4>
                        <input type="number" @bind="_idTramiteABajar" placeholder="ID Trámite a dar de baja" required>
                    </div>
                    <div>
                        <button type="submit" class="boton-inicio">Dar de baja</button>
                    </div>
                </form>
            } 
             @if (operacion == "Modificacion"){
                <form class="form-expedientes" @onsubmit="ModificarTramite">
                    <div class="elemento-input">
                        <h4>ID de Trámite a modificar</h4>
                        <input type="number" @bind="_idTramiteAModificar" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Contenido de tramite a modificar</h4>
                        <input type="text" @bind="_contenidoAModificar" required>
                    </div>
                    <div>
                        <label for="etiqueta">Etiqueta:</label>
                        <select class="etiqueta" @bind="_etiquetaModificada" required>
                            <option value="EscritoPresentado">Escrito presentado</option>
                            <option value="Despacho">Despacho</option>
                            <option value="Notificacion">Notificacion</option>
                            <option value="Resolucion">Resolución</option>
                            <option value="PaseAEstudio">Pase a Estudio</option>
                            <option value="PaseAlArchivo">Pase al Archivo</option>
                        </select>
                    </div>
                    <div>
                        <button type="submit" class="boton-inicio">Modificar</button>
                    </div>
                </form>
            }
            @if (operacion == "ConsultarE"){
                <form class="form-expedientes" @onsubmit="ConsultarEtiqueta">
                    <div>
                        <label for="etiqueta">Etiqueta:</label>
                        <select class="etiqueta" @bind="_etiquetaConsultada" required>
                            <option value="EscritoPresentado">Escrito presentado</option>
                            <option value="Despacho">Despacho</option>
                            <option value="Notificacion">Notificacion</option>
                            <option value="Resolucion">Resolución</option>
                            <option value="PaseAEstudio">Pase a Estudio</option>
                            <option value="PaseAlArchivo">Pase al Archivo</option>
                        </select>
                        <button type="submit" class="boton-inicio">Buscar</button>
                    </div>
                </form>
            }
        </div> 
        <div class="mostrar-datos">
            @foreach (var tramite in tramites)
            {
                <div class="detalle-tramite">
                    <span>Id del trámite: @tramite.Id</span>
                    <span>|Id del expediente: @tramite.ExpedienteId</span>
                    <span>|Etiqueta del trámite: @tramite.EtiquetaTramite</span>
                    <span>|Contenido: @tramite.Contenido</span>
                    <span>|Fecha de creación: @tramite.FechaCreacion</span>
                    <span>|Fecha de modificación: @tramite.FechaModificacion</span>
                    <span>|Id del usuario modificador: @tramite.IdUsuarioModificador |</span>
                </div>
            }
        </div>
    </div>
    
    <div class="contendor-botones">
        @if (permisoAltaTramite) {
            <button class="boton-inicio" @onclick="SetAltaTramite">Dar de alta</button>
        }
        @if (permisoBajaTramite) {
            <button class="boton-inicio" @onclick="SetBajaTramite">Dar de baja</button>
        }
        @if (permisoModificacionTramite) {
            <button class="boton-inicio" @onclick="SetModificarTramite">Modificar</button>
        }
        <button class="boton-inicio" @onclick="SetConsultarE">Consultar por etiqueta</button>
    </div>
    
    @if((operacion == "ConsultarE") && (TramitesConsultados != null)){
        <div>
            @foreach (var x in TramitesConsultados){
                <div class="detalle-tramite">
                    <span>Id del trámite: @x.Id</span>
                    <span>|Id del expediente: @x.ExpedienteId</span>
                    <span>|Etiqueta del trámite: @x.EtiquetaTramite</span>
                    <span>|Contenido: @x.Contenido</span>
                    <span>|Fecha de creación: @x.FechaCreacion</span>
                    <span>|Fecha de modificación: @x.FechaModificacion</span>
                    <span>|Id del usuario modificador: @x.IdUsuarioModificador |</span>
                </div>
            }
        </div>
    }

</section>

@code{
    private List<Tramite> tramites;
    private bool permisoAltaTramite = false;
    private bool permisoBajaTramite = false;
    private bool permisoModificacionTramite = false;
    [Parameter] public string? IdUsuario { get; set; }
    private int userId;
    private int _idTramite;
    private int _expedienteId;
    private string? operacion;
    private string? _contenido;
    private EtiquetaTramite.Etiquetas _etiqueta;
    private Excepcion ventanaExcepcion = null!;
    private int _idTramiteABajar;
    private EtiquetaTramite.Etiquetas _etiquetaModificada;
    private int _idTramiteAModificar;
    private string? _contenidoAModificar;
    private EtiquetaTramite.Etiquetas _etiquetaConsultada;
    private List<Tramite>? TramitesConsultados;
    private void SetOperacion(string nuevaOperacion) {
        operacion = nuevaOperacion;
    }

    protected override void OnInitialized()
    {
        userId = int.Parse(IdUsuario);
        RepositorioUsuarioSQLite repo = new RepositorioUsuarioSQLite();
        CasoDeUsoUsuarioConsultaPorId cu = new CasoDeUsoUsuarioConsultaPorId(repo);
        Usuario user = cu.Ejecutar(userId);
        if (user.Permisos.Contains("TramiteAlta")) permisoAltaTramite = true;
        if (user.Permisos.Contains("TramiteBaja")) permisoBajaTramite = true;
        if (user.Permisos.Contains("TramiteModificacion")) permisoModificacionTramite = true;
        CargarTramites();
    }

    private void CargarTramites()
    {
        RepositorioTramiteSQLite repo = new RepositorioTramiteSQLite();
        CasoDeUsoTramiteConsultaTodos tramitesTodos = new CasoDeUsoTramiteConsultaTodos(repo);
        tramites = tramitesTodos.Ejecutar();
    }

    private void ResetearDatos()
    {
        _idTramite = 0;
        _contenido = null;
    }

    public void ConsultarEtiqueta(){
        RepositorioTramiteSQLite repotramite = new RepositorioTramiteSQLite();
        CasoDeUsoTramiteConsultaPorEtiqueta busquedaEtiqueta = new CasoDeUsoTramiteConsultaPorEtiqueta(repotramite);
        try{
            List<Tramite>? aux = busquedaEtiqueta.Ejecutar(_etiquetaConsultada);
            TramitesConsultados = aux;
            
        }catch(RepositorioException ex){
            ventanaExcepcion.Mensaje = $"{ex.Message}"; 
            ventanaExcepcion.Mostrar(); 
        }
     }

    private void DarAltaTramite(){
        RepositorioUsuarioSQLite repouser= new RepositorioUsuarioSQLite();
        RepositorioTramiteSQLite repotramite = new RepositorioTramiteSQLite();
        RepositorioExpedienteSQLite repoexpediente = new RepositorioExpedienteSQLite();
        
        ServicioAutorizacion autorizacion = new ServicioAutorizacion(repouser);
        ServicioActualizacionEstado actualizacion = new ServicioActualizacionEstado(repoexpediente,repotramite);

        CasoDeUsoTramiteAlta tramiteAlta = new CasoDeUsoTramiteAlta(repotramite,autorizacion,actualizacion);
        try{
            string etiquetaString = _etiqueta.ToString();
            tramiteAlta.Ejecutar(_expedienteId,_contenido,etiquetaString,userId);
            
            ResetearDatos();
        }catch(RepositorioException ex){
            ventanaExcepcion.Mensaje = $"{ex.Message}"; 
            ventanaExcepcion.Mostrar(); 
        }
        RefreshPage();
    }

    private void DarBajaTramite(){
        //CasoDeUsoTramiteBaja(ITramiteRepositorio repo,ServicioAutorizacion autorizacion, ServicioActualizacionEstado actualizacion)
        RepositorioTramiteSQLite repotramite = new RepositorioTramiteSQLite();
        RepositorioUsuarioSQLite repouser = new RepositorioUsuarioSQLite();
        RepositorioExpedienteSQLite repoexpediente = new RepositorioExpedienteSQLite();

        ServicioAutorizacion autorizacion = new ServicioAutorizacion(repouser);
        ServicioActualizacionEstado actualizacion = new ServicioActualizacionEstado(repoexpediente,repotramite);
        
        CasoDeUsoTramiteBaja tramiteBaja = new CasoDeUsoTramiteBaja(repotramite,autorizacion,actualizacion);
        try{
            tramiteBaja.Ejecutar(_idTramiteABajar,userId);
            ResetearDatos();
            RefreshPage();
        }catch(RepositorioException ex){
            ventanaExcepcion.Mensaje = $"{ex.Message}"; 
            ventanaExcepcion.Mostrar(); 
        }
    }

     public void ModificarTramite(){
        RepositorioUsuarioSQLite repouser= new RepositorioUsuarioSQLite();
        RepositorioTramiteSQLite repotramite = new RepositorioTramiteSQLite();
        RepositorioExpedienteSQLite repoexpediente = new RepositorioExpedienteSQLite();
        
        ServicioAutorizacion autorizacion = new ServicioAutorizacion(repouser);
        ServicioActualizacionEstado actualizacion = new ServicioActualizacionEstado(repoexpediente,repotramite);
        CasoDeUsoTramiteModificacion tramiteModificacion = new CasoDeUsoTramiteModificacion(repotramite,autorizacion,actualizacion);
        
        try{
            tramiteModificacion.Ejecutar(_idTramiteAModificar,_contenidoAModificar,_etiquetaModificada,userId);
            ResetearDatos();
        }
        catch(RepositorioException ex){
            ventanaExcepcion.Mensaje = $"{ex.Message}"; 
            ventanaExcepcion.Mostrar(); 
        }
        RefreshPage();
    }

    private void SetAltaTramite()
    {
        operacion = "Alta";
    }

    private void SetBajaTramite()
    {
        operacion = "Baja";
    }

    private void SetModificarTramite()
    {
        operacion = "Modificacion";
    }

    private void SetConsultarE()
    {
        operacion = "ConsultarE";
    }

    private void RefreshPage()
    {
        Navigation.NavigateTo($"/tramites/{IdUsuario}", forceLoad: true);
    }
}
