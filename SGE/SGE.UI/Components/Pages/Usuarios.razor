@page "/usuarios/{IdUsuario}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject CasoDeUsoUsuarioConsultaPorId usuarioConsultaId
@inject CasoDeUsoUsuarioAlta usuarioAlta
@inject CasoDeUsoUsuarioBaja usuarioBaja
@inject CasoDeUsoUsuarioModificacion usuarioModificacion
@inject CasoDeUsoUsuarioConsultaPermisos usuarioConsultaPermisos
@inject CasoDeUsoUsuarioConsultaTodos usuarioConsultaTodos // Inyecta el caso de uso para consultar todos los usuarios

<PageTitle>Usuario | SGE</PageTitle>
<Excepcion @ref="ventanaExcepcion"/>

<section class="seccion-paginas">
    <h1>Usuarios</h1>
    <div class="contenedor">
        <div class="formularios">
            @if (operacion == "Alta")
            {
                <form class="form" @onsubmit="DarDeAltaUsuario">
                    <div class="elemento-input">
                        <h4>Nombre</h4>
                        <input type="text" @bind="_nombreUsuario" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Apellido</h4>
                        <input type="text" @bind="_apellidoUsuario" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Email</h4>
                        <input type="email" @bind="_emailUsuario" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Contraseña</h4>
                        <InputText type="password" @bind-Value="_contraseniaUsuario" required />
                    </div>
                    <div>
                        <button type="submit" class="boton-inicio">Confirmar</button>
                    </div>
                </form>
            }
            @if (operacion == "Baja")
            {
                <form class="form" @onsubmit="DarDeBajaUsuario">
                    <div class="elemento-input">
                        <h4>Email de usuario a eliminar</h4>
                        <input type="email" @bind="_emailAEliminar" required>
                    </div>
                    <button type="submit" class="boton-inicio">Eliminar Usuario</button>
                </form>
            }
            @if (operacion == "Modificacion")
            {
                <form class="form" @onsubmit="ModificarUsuario">
                    <div class="elemento-input">
                        <h4>Id del usuario a modificar</h4>
                        <input type="text" @bind="_idUsuarioModificado" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Nombre a modificar</h4>
                        <input type="text" @bind="_nombreModificado" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Apellido a modificar</h4>
                        <input type="text" @bind="_apellidoModificado" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Email a modificar</h4>
                        <input type="email" @bind="_emailModificado" required>
                    </div>
                    <div class="elemento-input">
                        <h4>Contraseña a modificar</h4>
                        <InputText type="password" @bind-Value="_contraseniaModificada" required />
                    </div>
                    <div class="permisos">
                        <h4>Permisos</h4>
                        @foreach (var permiso in Enum.GetValues<Permiso.Permisos>())
                        {
                            <div>
                                <input type="checkbox" @bind="@seleccionados[permiso]" /> @permiso
                            </div>
                        }
                    </div>
                    <div>
                        <button type="submit" class="boton-inicio">Confirmar</button>
                    </div>
                </form>
            }
        </div>
        <div class="mostrar-datitos">
            <h2>Lista de Usuarios</h2>
            <ul>
                @if (usuarios != null){
                    @foreach (var usuario in usuarios)
                    {
                        <li>
                            ID: @usuario.IdUsuario  Nombre: @usuario.Nombre  Apellido: @usuario.Apellido Email: @usuario.Email
                            @if (usuario.Permisos != null)
                            {
                                <ul>
                                    @foreach (var permiso in usuario.Permisos)
                                    {
                                        <li>@permiso</li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
    <div class="contenedor-botones">
        <button class="boton-inicio" @onclick="SetAltaUsuario">Dar de alta</button>
        <button class="boton-inicio" @onclick="SetBajaUsuario">Dar de baja</button>
        <button class="boton-inicio" @onclick="SetModificacion">Modificar Usuario</button>
    </div>
</section>

@code{
    [Parameter] public string IdUsuario { get; set; } = string.Empty;
    private int userId;
    private string? operacion;
    private int _idUsuarioModificado;
    private string? _contraseniaUsuario;
    private string? _nombreUsuario;
    private string? _apellidoUsuario;
    private string? _emailUsuario;
    private string? _emailAEliminar;
    private string? _nombreModificado;
    private string? _apellidoModificado;
    private string? _emailModificado;
    private string? _contraseniaModificada;
    private Excepcion ventanaExcepcion = null!;
    private Dictionary<Permiso.Permisos, bool> seleccionados = new Dictionary<Permiso.Permisos, bool>();
    private List<Usuario>? usuarios;

    protected override void OnInitialized()
    {
        userId = int.Parse(IdUsuario!);
        Usuario user = usuarioConsultaId.Ejecutar(userId!);
        List<string> _permisosDelUsuario = usuarioConsultaPermisos.Ejecutar(userId!);

        // Inicializar el diccionario con los permisos
        foreach (Permiso.Permisos permiso in Enum.GetValues(typeof(Permiso.Permisos)))
        {
            seleccionados[permiso] = _permisosDelUsuario.Contains(permiso.ToString());
        }
        usuarios = usuarioConsultaTodos.Ejecutar();
    }

    private void DarDeAltaUsuario()
    {
        try
        {
            usuarioAlta.Ejecutar(_nombreUsuario!, _apellidoUsuario!, _emailUsuario!,_contraseniaUsuario!);
            RefreshPage();
        }
        catch (ValidacionException ex)
        {
            ventanaExcepcion.CargarYMostrar(ex.Message);
        }
        
    }

    private void DarDeBajaUsuario()
    {
        try
        {
            usuarioBaja.Ejecutar(_emailAEliminar!);
            RefreshPage();
        }
        catch (RepositorioException ex)
        {
            ventanaExcepcion.CargarYMostrar(ex.Message);
        }
        
    }

    private void ModificarUsuario()
    {
        try
        {
            List<Permiso.Permisos>? permisosSeleccionados = seleccionados
                .Where(p => p.Value)
                .Select(p => p.Key)
                .ToList();

            usuarioModificacion.Ejecutar(_idUsuarioModificado!,_nombreModificado!,_apellidoModificado!,_emailModificado!,_contraseniaModificada!,permisosSeleccionados);
            RefreshPage();
        }
        catch (ValidacionException ex)
        {
            ventanaExcepcion.CargarYMostrar(ex.Message);
        }
        
    }

    private void SetAltaUsuario()
    {
        operacion = "Alta";
    }

    private void SetBajaUsuario()
    {
        operacion = "Baja";
    }

    private void SetModificacion()
    {
        operacion = "Modificacion";
    }

    private void RefreshPage()
    {
        Navigation.NavigateTo($"/usuarios/{IdUsuario}", forceLoad: true);
    }
}
